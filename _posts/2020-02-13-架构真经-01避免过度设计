## 两类过度设计
1. 产品的设计和实施超过实际的需求。（为地球上所有人研发的打卡系统）
  过度使用资源，造成研发周期过长，影响公司产品的发布计划，影响公司的收入和股东的利益。
2. 把一件事情做得过于复杂。  
    1. 超过实际需要的过度工作。
    2. 让用户费不必要的精力
    3. 研发者把软件写得异常复杂以至于其他研发工程师无法理解.
  
## 避免过度设计
对一个好工程师的真实度量，是看他能多快简化一个复杂的问题，然后构思出一个易于理解并可以维护的方案。
浅显易懂的方案可以让初中级工程师快速上手，在系统故障时能很快查到问题，更能增强组织和平台的扩展性。

## 如何验证
让负责解决该复杂问题的工程师把自己的解决方案展现给公司内的不同技术团队。想要通过这个测试，每个
技术团队都应该能轻松地理解方案，并在无人协助的情况下，向其他不知情的人描述此方案。

## 过度设计是可扩展性的大敌之一
设计一个超过实际需要的方案就是浪费金钱和时间，更进一步说，这种方案会浪费系统的处理资源，增加系统扩展成本，限制平台最终的规模。
让用户费很多精力的系统，会在增加用户数量和快速开展业务时遇到瓶颈。
复杂到难以理解的系统会扼杀组织的生产力，加大工程师团队扩大的难度，也提高了为系统增加新功能的难度。
